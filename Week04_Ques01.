#include<iostream>
using namespace std;
void merge(int a[],int l,int mid,int u,int &c)
{ 
int T[100];
int k=0;
int i=l;
int j=mid+1;
while(i<=mid&&j<=u)
{
    if(a[i]<=a[j]) 
    {
        T[k]=a[i];
        i++;
        k++;
    }
    else//3 6 1 5
    {
        T[k]=a[j];
        j++;
        k++;
    }
    c++;
}
while(i<=mid)
{

        T[k]=a[i];
        i++;
        k++;
        c++;
    
}
while(j<=u)
{

        T[k]=a[j];
        j++;
        k++;
        c++;
    
}
for(int j=0;j<k;j++)
{
    a[j+l]=T[j];
}

return;
}
void sort(int a[],int l,int u,int&c)
{
    int mid;
    if(l>=u)
    {
        return;
    }
    mid=(l+u)/2;
    sort(a,l,mid,c);
    sort(a,mid+1,u,c);
    merge(a,l,mid,u,c);
}
int inversion(int a[],int n,int &t)
{
    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            if(a[i]>a[j])
            {
                t++;
            }
        }
    }
    return t;
}
int main()
{
    int m;
    cin>>m;
    while(m)
    {
    int n;
    int a[100];
    int p=0;
    cin>>n;
    int c=0;
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    p=inversion(a,n,p);
    sort(a,0,n-1,c);
    cout<<"Conversion::::"<<c<<"\n";
    cout<<"Inversion::::"<<p<<"\n";
    for(int j=0;j<n;j++)
    {
        cout<<a[j];
    }
}
    
return 0;    
}
