#include<bits/stdc++.h>
using namespace std;
const int N=1e5+10;
vector<int> v[N];
vector<bool>k(N,false);
bool ispresent=false;
void DFS(int j,int n)
{
    if(!k[j])
    {
        k[j]=true;
        cout<<j;
      
        for(auto x:v[j])
        {
            ispresent=true;
            DFS(x,n);
        }
   }
   else
   {
       return;
   }
}
int main()
{
    int n,m;
    int k;
    //number of edges and the number of vertex in the graph.
    cin>>n>>m;
    int v1,v2;
    for(int i=0;i<m;i++)
    {
        cin>>v1>>v2;
        v[v1].push_back(v2);
        v[v2].push_back(v1);
    }
    cout<<"\n Enter the destination node::::";
    cin>>k;
 DFS(1,k);
 if(ispresent)
 cout<<"\n Path exists.";
 else
 cout<<"\n Path do not exists.";
    return 0;
}
